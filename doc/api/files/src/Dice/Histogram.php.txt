<?php

namespace chvi17\Dice;

/**
 * Class for generating histogram data.
 */
class Histogram
{
    /**
     * @var array $serie  The numbers stored in sequence.
     * @var int   $min    The lowest possible number.
     * @var int   $max    The highest possible number.
     */
    private $serie = [];
    private $min;
    private $max;

    /**
     * Get the serie.
     *
     * @return array with the serie.
     */
    public function getSerie()
    {
        return $this->serie;
    }

    /**
     * Return a string with a textual representation of the histogram.
     *
     * @return string representing the histogram.
     */
    public function getAsText()
    {
        $resultArray = array();
        foreach ($this->serie as $key) {
            if (!key_exists($key, $resultArray)) {
                $resultArray[$key] = "*";
            } else {
                $resultArray[$key] .= "*";
            }
        }
        if ($this->min != null && $this->max != null && $this->min < $this->max) {
            for ($i = $this->min; $i <= $this->max; $i++) {
                if (!key_exists($i, $resultArray)) {
                    $resultArray[$i] = "";
                }
            }
        }
        //sort and make string
        ksort($resultArray);
        $resultHtml = "<ul class='histogram'>";
        foreach ($resultArray as $key => $value) {
            $resultHtml .= "<li>$key: $value</li>";
        }
        $resultHtml .= "</ul>";
        return $resultHtml;
    }

    /**
     * Inject the object to use as base for the histogram data.
     *
     * @param HistogramInterface $object The object holding the serie.
     *
     * @return void.
     */
    public function injectData(HistogramInterface $object)
    {
        $this->serie = $object->getHistogramSerie();
        $this->min   = $object->getHistogramMin();
        $this->max   = $object->getHistogramMax();
    }



    /**
     * Reset the serie for the object to use as base for the histogram data.
     * @param HistogramInterface $object The object holding the serie
     * @return void.
     */
    public function resetHistogramSerie(HistogramInterface $object)
    {
        $this->serie = $object->resetHistogramSerie();

        $this->min   = $object->getHistogramMin();
        $this->max   = $object->getHistogramMax();
        $this->serie = $object->getHistogramSerie();
    }
}

